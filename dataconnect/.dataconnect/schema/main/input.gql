"""
✨ `Compra_KeyOutput` returns the primary key fields of table type `Compra`.

It has the same format as `Compra_Key`, but is only used as mutation return value.
"""
scalar Compra_KeyOutput
"""
✨ `ItemCompra_KeyOutput` returns the primary key fields of table type `ItemCompra`.

It has the same format as `ItemCompra_Key`, but is only used as mutation return value.
"""
scalar ItemCompra_KeyOutput
"""
✨ `ItemVenda_KeyOutput` returns the primary key fields of table type `ItemVenda`.

It has the same format as `ItemVenda_Key`, but is only used as mutation return value.
"""
scalar ItemVenda_KeyOutput
"""
✨ `Produto_KeyOutput` returns the primary key fields of table type `Produto`.

It has the same format as `Produto_Key`, but is only used as mutation return value.
"""
scalar Produto_KeyOutput
"""
✨ `Usuario_KeyOutput` returns the primary key fields of table type `Usuario`.

It has the same format as `Usuario_Key`, but is only used as mutation return value.
"""
scalar Usuario_KeyOutput
"""
✨ `Venda_KeyOutput` returns the primary key fields of table type `Venda`.

It has the same format as `Venda_Key`, but is only used as mutation return value.
"""
scalar Venda_KeyOutput
"""
✨ Generated data input type for table 'Compra'. It includes all necessary fields for creating or upserting rows into table.
"""
input Compra_Data {
  """
  ✨ Generated from Field `Compra`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Compra`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `Compra`.`data` of type `Timestamp!`
  """
  data: Timestamp
  """
  ✨ `_expr` server value variant of `data` (✨ Generated from Field `Compra`.`data` of type `Timestamp!`)
  """
  data_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `data` (✨ Generated from Field `Compra`.`data` of type `Timestamp!`)
  """
  data_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `data` (✨ Generated from Field `Compra`.`data` of type `Timestamp!`)
  """
  data_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Compra`.`fornecedor` of type `String!`
  """
  fornecedor: String
  """
  ✨ `_expr` server value variant of `fornecedor` (✨ Generated from Field `Compra`.`fornecedor` of type `String!`)
  """
  fornecedor_expr: String_Expr
  """
  ✨ Generated from Field `Compra`.`numeroNota` of type `String`
  """
  numeroNota: String
  """
  ✨ `_expr` server value variant of `numeroNota` (✨ Generated from Field `Compra`.`numeroNota` of type `String`)
  """
  numeroNota_expr: String_Expr
  """
  ✨ Generated from Field `Compra`.`observacoes` of type `String`
  """
  observacoes: String
  """
  ✨ `_expr` server value variant of `observacoes` (✨ Generated from Field `Compra`.`observacoes` of type `String`)
  """
  observacoes_expr: String_Expr
  """
  ✨ Generated from Field `Compra`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Compra`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Compra`.`usuarioId` of type `String!`
  """
  usuarioId: String
  """
  ✨ `_expr` server value variant of `usuarioId` (✨ Generated from Field `Compra`.`usuarioId` of type `String!`)
  """
  usuarioId_expr: String_Expr
  """
  ✨ Generated from Field `Compra`.`valorTotal` of type `Float!`
  """
  valorTotal: Float
  """
  ✨ `_expr` server value variant of `valorTotal` (✨ Generated from Field `Compra`.`valorTotal` of type `Float!`)
  """
  valorTotal_expr: Float_Expr
  """
  ✨ `_update` server value variant of `valorTotal` (✨ Generated from Field `Compra`.`valorTotal` of type `Float!`)
  """
  valorTotal_update: [Float_Update!]
}
"""
✨ Generated filter input type for table 'Compra'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Compra_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Compra_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Compra_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Compra_Filter!]
  """
  ✨ Generated from Field `Compra`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `Compra`.`data` of type `Timestamp!`
  """
  data: Timestamp_Filter
  """
  ✨ Generated from Field `Compra`.`fornecedor` of type `String!`
  """
  fornecedor: String_Filter
  """
  ✨ Generated from Field `Compra`.`numeroNota` of type `String`
  """
  numeroNota: String_Filter
  """
  ✨ Generated from Field `Compra`.`observacoes` of type `String`
  """
  observacoes: String_Filter
  """
  ✨ Generated from Field `Compra`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Compra`.`usuarioId` of type `String!`
  """
  usuarioId: String_Filter
  """
  ✨ Generated from Field `Compra`.`valorTotal` of type `Float!`
  """
  valorTotal: Float_Filter
}
"""
✨ Generated first-row input type for table 'Compra'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Compra_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Compra_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Compra_Filter
}
"""
✨ Generated having input type for table 'Compra'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Compra_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Compra_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Compra_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Compra_Having!]
  """
  ✨ Generated from Field `Compra`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`data_count` of type `Int!`
  """
  data_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`fornecedor_count` of type `Int!`
  """
  fornecedor_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`numeroNota_count` of type `Int!`
  """
  numeroNota_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`observacoes_count` of type `Int!`
  """
  observacoes_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`usuarioId_count` of type `Int!`
  """
  usuarioId_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`valorTotal_count` of type `Int!`
  """
  valorTotal_count: Int_Filter
  """
  ✨ Generated from Field `Compra`.`valorTotal_sum` of type `Float`
  """
  valorTotal_sum: Float_Filter
  """
  ✨ Generated from Field `Compra`.`valorTotal_avg` of type `Float`
  """
  valorTotal_avg: Float_Filter
  """
  ✨ Generated from Field `Compra`.`data_min` of type `Timestamp`
  """
  data_min: Timestamp_Filter
  """
  ✨ Generated from Field `Compra`.`valorTotal_min` of type `Float`
  """
  valorTotal_min: Float_Filter
  """
  ✨ Generated from Field `Compra`.`data_max` of type `Timestamp`
  """
  data_max: Timestamp_Filter
  """
  ✨ Generated from Field `Compra`.`valorTotal_max` of type `Float`
  """
  valorTotal_max: Float_Filter
}
"""
✨ Generated key input type for table 'Compra'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Compra_Key {
  """
  ✨ Generated from Field `Compra`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Compra`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'Compra'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Compra_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Compra_Filter
}
"""
✨ Generated order input type for table 'Compra'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Compra_Order {
  """
  ✨ Generated from Field `Compra`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Compra`.`data` of type `Timestamp!`
  """
  data: OrderDirection
  """
  ✨ Generated from Field `Compra`.`fornecedor` of type `String!`
  """
  fornecedor: OrderDirection
  """
  ✨ Generated from Field `Compra`.`numeroNota` of type `String`
  """
  numeroNota: OrderDirection
  """
  ✨ Generated from Field `Compra`.`observacoes` of type `String`
  """
  observacoes: OrderDirection
  """
  ✨ Generated from Field `Compra`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Compra`.`usuarioId` of type `String!`
  """
  usuarioId: OrderDirection
  """
  ✨ Generated from Field `Compra`.`valorTotal` of type `Float!`
  """
  valorTotal: OrderDirection
}
"""
✨ Generated data input type for table 'ItemCompra'. It includes all necessary fields for creating or upserting rows into table.
"""
input ItemCompra_Data {
  """
  ✨ Generated from Field `ItemCompra`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ItemCompra`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `ItemCompra`.`compraId` of type `String!`
  """
  compraId: String
  """
  ✨ `_expr` server value variant of `compraId` (✨ Generated from Field `ItemCompra`.`compraId` of type `String!`)
  """
  compraId_expr: String_Expr
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento` of type `Float!`
  """
  custoNoMomento: Float
  """
  ✨ `_expr` server value variant of `custoNoMomento` (✨ Generated from Field `ItemCompra`.`custoNoMomento` of type `Float!`)
  """
  custoNoMomento_expr: Float_Expr
  """
  ✨ `_update` server value variant of `custoNoMomento` (✨ Generated from Field `ItemCompra`.`custoNoMomento` of type `Float!`)
  """
  custoNoMomento_update: [Float_Update!]
  """
  ✨ Generated from Field `ItemCompra`.`produtoId` of type `String!`
  """
  produtoId: String
  """
  ✨ `_expr` server value variant of `produtoId` (✨ Generated from Field `ItemCompra`.`produtoId` of type `String!`)
  """
  produtoId_expr: String_Expr
  """
  ✨ Generated from Field `ItemCompra`.`quantidade` of type `Int!`
  """
  quantidade: Int
  """
  ✨ `_expr` server value variant of `quantidade` (✨ Generated from Field `ItemCompra`.`quantidade` of type `Int!`)
  """
  quantidade_expr: Int_Expr
  """
  ✨ `_update` server value variant of `quantidade` (✨ Generated from Field `ItemCompra`.`quantidade` of type `Int!`)
  """
  quantidade_update: [Int_Update!]
  """
  ✨ Generated from Field `ItemCompra`.`subtotal` of type `Float!`
  """
  subtotal: Float
  """
  ✨ `_expr` server value variant of `subtotal` (✨ Generated from Field `ItemCompra`.`subtotal` of type `Float!`)
  """
  subtotal_expr: Float_Expr
  """
  ✨ `_update` server value variant of `subtotal` (✨ Generated from Field `ItemCompra`.`subtotal` of type `Float!`)
  """
  subtotal_update: [Float_Update!]
}
"""
✨ Generated filter input type for table 'ItemCompra'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ItemCompra_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ItemCompra_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ItemCompra_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ItemCompra_Filter!]
  """
  ✨ Generated from Field `ItemCompra`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `ItemCompra`.`compraId` of type `String!`
  """
  compraId: String_Filter
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento` of type `Float!`
  """
  custoNoMomento: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`produtoId` of type `String!`
  """
  produtoId: String_Filter
  """
  ✨ Generated from Field `ItemCompra`.`quantidade` of type `Int!`
  """
  quantidade: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`subtotal` of type `Float!`
  """
  subtotal: Float_Filter
}
"""
✨ Generated first-row input type for table 'ItemCompra'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ItemCompra_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ItemCompra_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ItemCompra_Filter
}
"""
✨ Generated having input type for table 'ItemCompra'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ItemCompra_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ItemCompra_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ItemCompra_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ItemCompra_Having!]
  """
  ✨ Generated from Field `ItemCompra`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`compraId_count` of type `Int!`
  """
  compraId_count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento_count` of type `Int!`
  """
  custoNoMomento_count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`produtoId_count` of type `Int!`
  """
  produtoId_count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`quantidade_count` of type `Int!`
  """
  quantidade_count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`subtotal_count` of type `Int!`
  """
  subtotal_count: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento_sum` of type `Float`
  """
  custoNoMomento_sum: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`quantidade_sum` of type `Int`
  """
  quantidade_sum: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`subtotal_sum` of type `Float`
  """
  subtotal_sum: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento_avg` of type `Float`
  """
  custoNoMomento_avg: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`quantidade_avg` of type `Float`
  """
  quantidade_avg: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`subtotal_avg` of type `Float`
  """
  subtotal_avg: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento_min` of type `Float`
  """
  custoNoMomento_min: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`quantidade_min` of type `Int`
  """
  quantidade_min: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`subtotal_min` of type `Float`
  """
  subtotal_min: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento_max` of type `Float`
  """
  custoNoMomento_max: Float_Filter
  """
  ✨ Generated from Field `ItemCompra`.`quantidade_max` of type `Int`
  """
  quantidade_max: Int_Filter
  """
  ✨ Generated from Field `ItemCompra`.`subtotal_max` of type `Float`
  """
  subtotal_max: Float_Filter
}
"""
✨ Generated key input type for table 'ItemCompra'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ItemCompra_Key {
  """
  ✨ Generated from Field `ItemCompra`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ItemCompra`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'ItemCompra'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ItemCompra_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ItemCompra_Filter
}
"""
✨ Generated order input type for table 'ItemCompra'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ItemCompra_Order {
  """
  ✨ Generated from Field `ItemCompra`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ItemCompra`.`compraId` of type `String!`
  """
  compraId: OrderDirection
  """
  ✨ Generated from Field `ItemCompra`.`custoNoMomento` of type `Float!`
  """
  custoNoMomento: OrderDirection
  """
  ✨ Generated from Field `ItemCompra`.`produtoId` of type `String!`
  """
  produtoId: OrderDirection
  """
  ✨ Generated from Field `ItemCompra`.`quantidade` of type `Int!`
  """
  quantidade: OrderDirection
  """
  ✨ Generated from Field `ItemCompra`.`subtotal` of type `Float!`
  """
  subtotal: OrderDirection
}
"""
✨ Generated data input type for table 'ItemVenda'. It includes all necessary fields for creating or upserting rows into table.
"""
input ItemVenda_Data {
  """
  ✨ Generated from Field `ItemVenda`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ItemVenda`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento` of type `Float!`
  """
  precoNoMomento: Float
  """
  ✨ `_expr` server value variant of `precoNoMomento` (✨ Generated from Field `ItemVenda`.`precoNoMomento` of type `Float!`)
  """
  precoNoMomento_expr: Float_Expr
  """
  ✨ `_update` server value variant of `precoNoMomento` (✨ Generated from Field `ItemVenda`.`precoNoMomento` of type `Float!`)
  """
  precoNoMomento_update: [Float_Update!]
  """
  ✨ Generated from Field `ItemVenda`.`produtoId` of type `String!`
  """
  produtoId: String
  """
  ✨ `_expr` server value variant of `produtoId` (✨ Generated from Field `ItemVenda`.`produtoId` of type `String!`)
  """
  produtoId_expr: String_Expr
  """
  ✨ Generated from Field `ItemVenda`.`quantidade` of type `Int!`
  """
  quantidade: Int
  """
  ✨ `_expr` server value variant of `quantidade` (✨ Generated from Field `ItemVenda`.`quantidade` of type `Int!`)
  """
  quantidade_expr: Int_Expr
  """
  ✨ `_update` server value variant of `quantidade` (✨ Generated from Field `ItemVenda`.`quantidade` of type `Int!`)
  """
  quantidade_update: [Int_Update!]
  """
  ✨ Generated from Field `ItemVenda`.`subtotal` of type `Float!`
  """
  subtotal: Float
  """
  ✨ `_expr` server value variant of `subtotal` (✨ Generated from Field `ItemVenda`.`subtotal` of type `Float!`)
  """
  subtotal_expr: Float_Expr
  """
  ✨ `_update` server value variant of `subtotal` (✨ Generated from Field `ItemVenda`.`subtotal` of type `Float!`)
  """
  subtotal_update: [Float_Update!]
  """
  ✨ Generated from Field `ItemVenda`.`vendaId` of type `String!`
  """
  vendaId: String
  """
  ✨ `_expr` server value variant of `vendaId` (✨ Generated from Field `ItemVenda`.`vendaId` of type `String!`)
  """
  vendaId_expr: String_Expr
}
"""
✨ Generated filter input type for table 'ItemVenda'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ItemVenda_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ItemVenda_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ItemVenda_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ItemVenda_Filter!]
  """
  ✨ Generated from Field `ItemVenda`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento` of type `Float!`
  """
  precoNoMomento: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`produtoId` of type `String!`
  """
  produtoId: String_Filter
  """
  ✨ Generated from Field `ItemVenda`.`quantidade` of type `Int!`
  """
  quantidade: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`subtotal` of type `Float!`
  """
  subtotal: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`vendaId` of type `String!`
  """
  vendaId: String_Filter
}
"""
✨ Generated first-row input type for table 'ItemVenda'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ItemVenda_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ItemVenda_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ItemVenda_Filter
}
"""
✨ Generated having input type for table 'ItemVenda'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ItemVenda_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ItemVenda_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ItemVenda_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ItemVenda_Having!]
  """
  ✨ Generated from Field `ItemVenda`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento_count` of type `Int!`
  """
  precoNoMomento_count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`produtoId_count` of type `Int!`
  """
  produtoId_count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`quantidade_count` of type `Int!`
  """
  quantidade_count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`subtotal_count` of type `Int!`
  """
  subtotal_count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`vendaId_count` of type `Int!`
  """
  vendaId_count: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento_sum` of type `Float`
  """
  precoNoMomento_sum: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`quantidade_sum` of type `Int`
  """
  quantidade_sum: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`subtotal_sum` of type `Float`
  """
  subtotal_sum: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento_avg` of type `Float`
  """
  precoNoMomento_avg: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`quantidade_avg` of type `Float`
  """
  quantidade_avg: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`subtotal_avg` of type `Float`
  """
  subtotal_avg: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento_min` of type `Float`
  """
  precoNoMomento_min: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`quantidade_min` of type `Int`
  """
  quantidade_min: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`subtotal_min` of type `Float`
  """
  subtotal_min: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento_max` of type `Float`
  """
  precoNoMomento_max: Float_Filter
  """
  ✨ Generated from Field `ItemVenda`.`quantidade_max` of type `Int`
  """
  quantidade_max: Int_Filter
  """
  ✨ Generated from Field `ItemVenda`.`subtotal_max` of type `Float`
  """
  subtotal_max: Float_Filter
}
"""
✨ Generated key input type for table 'ItemVenda'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ItemVenda_Key {
  """
  ✨ Generated from Field `ItemVenda`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ItemVenda`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'ItemVenda'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ItemVenda_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ItemVenda_Filter
}
"""
✨ Generated order input type for table 'ItemVenda'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ItemVenda_Order {
  """
  ✨ Generated from Field `ItemVenda`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ItemVenda`.`precoNoMomento` of type `Float!`
  """
  precoNoMomento: OrderDirection
  """
  ✨ Generated from Field `ItemVenda`.`produtoId` of type `String!`
  """
  produtoId: OrderDirection
  """
  ✨ Generated from Field `ItemVenda`.`quantidade` of type `Int!`
  """
  quantidade: OrderDirection
  """
  ✨ Generated from Field `ItemVenda`.`subtotal` of type `Float!`
  """
  subtotal: OrderDirection
  """
  ✨ Generated from Field `ItemVenda`.`vendaId` of type `String!`
  """
  vendaId: OrderDirection
}
"""
✨ Generated data input type for table 'Produto'. It includes all necessary fields for creating or upserting rows into table.
"""
input Produto_Data {
  """
  ✨ Generated from Field `Produto`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Produto`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`ativo` of type `Boolean!`
  """
  ativo: Boolean
  """
  ✨ `_expr` server value variant of `ativo` (✨ Generated from Field `Produto`.`ativo` of type `Boolean!`)
  """
  ativo_expr: Boolean_Expr
  """
  ✨ Generated from Field `Produto`.`categoria` of type `String!`
  """
  categoria: String
  """
  ✨ `_expr` server value variant of `categoria` (✨ Generated from Field `Produto`.`categoria` of type `String!`)
  """
  categoria_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`codigo` of type `String!`
  """
  codigo: String
  """
  ✨ `_expr` server value variant of `codigo` (✨ Generated from Field `Produto`.`codigo` of type `String!`)
  """
  codigo_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`dataAtualizacao` of type `Timestamp!`
  """
  dataAtualizacao: Timestamp
  """
  ✨ `_expr` server value variant of `dataAtualizacao` (✨ Generated from Field `Produto`.`dataAtualizacao` of type `Timestamp!`)
  """
  dataAtualizacao_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `dataAtualizacao` (✨ Generated from Field `Produto`.`dataAtualizacao` of type `Timestamp!`)
  """
  dataAtualizacao_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `dataAtualizacao` (✨ Generated from Field `Produto`.`dataAtualizacao` of type `Timestamp!`)
  """
  dataAtualizacao_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Produto`.`dataCriacao` of type `Timestamp!`
  """
  dataCriacao: Timestamp
  """
  ✨ `_expr` server value variant of `dataCriacao` (✨ Generated from Field `Produto`.`dataCriacao` of type `Timestamp!`)
  """
  dataCriacao_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `dataCriacao` (✨ Generated from Field `Produto`.`dataCriacao` of type `Timestamp!`)
  """
  dataCriacao_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `dataCriacao` (✨ Generated from Field `Produto`.`dataCriacao` of type `Timestamp!`)
  """
  dataCriacao_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Produto`.`descricao` of type `String!`
  """
  descricao: String
  """
  ✨ `_expr` server value variant of `descricao` (✨ Generated from Field `Produto`.`descricao` of type `String!`)
  """
  descricao_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`estoqueAtual` of type `Int!`
  """
  estoqueAtual: Int
  """
  ✨ `_expr` server value variant of `estoqueAtual` (✨ Generated from Field `Produto`.`estoqueAtual` of type `Int!`)
  """
  estoqueAtual_expr: Int_Expr
  """
  ✨ `_update` server value variant of `estoqueAtual` (✨ Generated from Field `Produto`.`estoqueAtual` of type `Int!`)
  """
  estoqueAtual_update: [Int_Update!]
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo` of type `Int!`
  """
  estoqueMinimo: Int
  """
  ✨ `_expr` server value variant of `estoqueMinimo` (✨ Generated from Field `Produto`.`estoqueMinimo` of type `Int!`)
  """
  estoqueMinimo_expr: Int_Expr
  """
  ✨ `_update` server value variant of `estoqueMinimo` (✨ Generated from Field `Produto`.`estoqueMinimo` of type `Int!`)
  """
  estoqueMinimo_update: [Int_Update!]
  """
  ✨ Generated from Field `Produto`.`fornecedor` of type `String`
  """
  fornecedor: String
  """
  ✨ `_expr` server value variant of `fornecedor` (✨ Generated from Field `Produto`.`fornecedor` of type `String`)
  """
  fornecedor_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`nome` of type `String!`
  """
  nome: String
  """
  ✨ `_expr` server value variant of `nome` (✨ Generated from Field `Produto`.`nome` of type `String!`)
  """
  nome_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`observacoes` of type `String`
  """
  observacoes: String
  """
  ✨ `_expr` server value variant of `observacoes` (✨ Generated from Field `Produto`.`observacoes` of type `String`)
  """
  observacoes_expr: String_Expr
  """
  ✨ Generated from Field `Produto`.`precoCusto` of type `Float!`
  """
  precoCusto: Float
  """
  ✨ `_expr` server value variant of `precoCusto` (✨ Generated from Field `Produto`.`precoCusto` of type `Float!`)
  """
  precoCusto_expr: Float_Expr
  """
  ✨ `_update` server value variant of `precoCusto` (✨ Generated from Field `Produto`.`precoCusto` of type `Float!`)
  """
  precoCusto_update: [Float_Update!]
  """
  ✨ Generated from Field `Produto`.`precoVenda` of type `Float!`
  """
  precoVenda: Float
  """
  ✨ `_expr` server value variant of `precoVenda` (✨ Generated from Field `Produto`.`precoVenda` of type `Float!`)
  """
  precoVenda_expr: Float_Expr
  """
  ✨ `_update` server value variant of `precoVenda` (✨ Generated from Field `Produto`.`precoVenda` of type `Float!`)
  """
  precoVenda_update: [Float_Update!]
  """
  ✨ Generated from Field `Produto`.`usuarioId` of type `String!`
  """
  usuarioId: String
  """
  ✨ `_expr` server value variant of `usuarioId` (✨ Generated from Field `Produto`.`usuarioId` of type `String!`)
  """
  usuarioId_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Produto'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Produto_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Produto_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Produto_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Produto_Filter!]
  """
  ✨ Generated from Field `Produto`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `Produto`.`ativo` of type `Boolean!`
  """
  ativo: Boolean_Filter
  """
  ✨ Generated from Field `Produto`.`categoria` of type `String!`
  """
  categoria: String_Filter
  """
  ✨ Generated from Field `Produto`.`codigo` of type `String!`
  """
  codigo: String_Filter
  """
  ✨ Generated from Field `Produto`.`dataAtualizacao` of type `Timestamp!`
  """
  dataAtualizacao: Timestamp_Filter
  """
  ✨ Generated from Field `Produto`.`dataCriacao` of type `Timestamp!`
  """
  dataCriacao: Timestamp_Filter
  """
  ✨ Generated from Field `Produto`.`descricao` of type `String!`
  """
  descricao: String_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueAtual` of type `Int!`
  """
  estoqueAtual: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo` of type `Int!`
  """
  estoqueMinimo: Int_Filter
  """
  ✨ Generated from Field `Produto`.`fornecedor` of type `String`
  """
  fornecedor: String_Filter
  """
  ✨ Generated from Field `Produto`.`nome` of type `String!`
  """
  nome: String_Filter
  """
  ✨ Generated from Field `Produto`.`observacoes` of type `String`
  """
  observacoes: String_Filter
  """
  ✨ Generated from Field `Produto`.`precoCusto` of type `Float!`
  """
  precoCusto: Float_Filter
  """
  ✨ Generated from Field `Produto`.`precoVenda` of type `Float!`
  """
  precoVenda: Float_Filter
  """
  ✨ Generated from Field `Produto`.`usuarioId` of type `String!`
  """
  usuarioId: String_Filter
}
"""
✨ Generated first-row input type for table 'Produto'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Produto_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Produto_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Produto_Filter
}
"""
✨ Generated having input type for table 'Produto'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Produto_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Produto_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Produto_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Produto_Having!]
  """
  ✨ Generated from Field `Produto`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`ativo_count` of type `Int!`
  """
  ativo_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`categoria_count` of type `Int!`
  """
  categoria_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`codigo_count` of type `Int!`
  """
  codigo_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`dataAtualizacao_count` of type `Int!`
  """
  dataAtualizacao_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`dataCriacao_count` of type `Int!`
  """
  dataCriacao_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`descricao_count` of type `Int!`
  """
  descricao_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueAtual_count` of type `Int!`
  """
  estoqueAtual_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo_count` of type `Int!`
  """
  estoqueMinimo_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`fornecedor_count` of type `Int!`
  """
  fornecedor_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`nome_count` of type `Int!`
  """
  nome_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`observacoes_count` of type `Int!`
  """
  observacoes_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`precoCusto_count` of type `Int!`
  """
  precoCusto_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`precoVenda_count` of type `Int!`
  """
  precoVenda_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`usuarioId_count` of type `Int!`
  """
  usuarioId_count: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueAtual_sum` of type `Int`
  """
  estoqueAtual_sum: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo_sum` of type `Int`
  """
  estoqueMinimo_sum: Int_Filter
  """
  ✨ Generated from Field `Produto`.`precoCusto_sum` of type `Float`
  """
  precoCusto_sum: Float_Filter
  """
  ✨ Generated from Field `Produto`.`precoVenda_sum` of type `Float`
  """
  precoVenda_sum: Float_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueAtual_avg` of type `Float`
  """
  estoqueAtual_avg: Float_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo_avg` of type `Float`
  """
  estoqueMinimo_avg: Float_Filter
  """
  ✨ Generated from Field `Produto`.`precoCusto_avg` of type `Float`
  """
  precoCusto_avg: Float_Filter
  """
  ✨ Generated from Field `Produto`.`precoVenda_avg` of type `Float`
  """
  precoVenda_avg: Float_Filter
  """
  ✨ Generated from Field `Produto`.`dataAtualizacao_min` of type `Timestamp`
  """
  dataAtualizacao_min: Timestamp_Filter
  """
  ✨ Generated from Field `Produto`.`dataCriacao_min` of type `Timestamp`
  """
  dataCriacao_min: Timestamp_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueAtual_min` of type `Int`
  """
  estoqueAtual_min: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo_min` of type `Int`
  """
  estoqueMinimo_min: Int_Filter
  """
  ✨ Generated from Field `Produto`.`precoCusto_min` of type `Float`
  """
  precoCusto_min: Float_Filter
  """
  ✨ Generated from Field `Produto`.`precoVenda_min` of type `Float`
  """
  precoVenda_min: Float_Filter
  """
  ✨ Generated from Field `Produto`.`dataAtualizacao_max` of type `Timestamp`
  """
  dataAtualizacao_max: Timestamp_Filter
  """
  ✨ Generated from Field `Produto`.`dataCriacao_max` of type `Timestamp`
  """
  dataCriacao_max: Timestamp_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueAtual_max` of type `Int`
  """
  estoqueAtual_max: Int_Filter
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo_max` of type `Int`
  """
  estoqueMinimo_max: Int_Filter
  """
  ✨ Generated from Field `Produto`.`precoCusto_max` of type `Float`
  """
  precoCusto_max: Float_Filter
  """
  ✨ Generated from Field `Produto`.`precoVenda_max` of type `Float`
  """
  precoVenda_max: Float_Filter
}
"""
✨ Generated key input type for table 'Produto'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Produto_Key {
  """
  ✨ Generated from Field `Produto`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Produto`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'Produto'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Produto_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Produto_Filter
}
"""
✨ Generated order input type for table 'Produto'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Produto_Order {
  """
  ✨ Generated from Field `Produto`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Produto`.`ativo` of type `Boolean!`
  """
  ativo: OrderDirection
  """
  ✨ Generated from Field `Produto`.`categoria` of type `String!`
  """
  categoria: OrderDirection
  """
  ✨ Generated from Field `Produto`.`codigo` of type `String!`
  """
  codigo: OrderDirection
  """
  ✨ Generated from Field `Produto`.`dataAtualizacao` of type `Timestamp!`
  """
  dataAtualizacao: OrderDirection
  """
  ✨ Generated from Field `Produto`.`dataCriacao` of type `Timestamp!`
  """
  dataCriacao: OrderDirection
  """
  ✨ Generated from Field `Produto`.`descricao` of type `String!`
  """
  descricao: OrderDirection
  """
  ✨ Generated from Field `Produto`.`estoqueAtual` of type `Int!`
  """
  estoqueAtual: OrderDirection
  """
  ✨ Generated from Field `Produto`.`estoqueMinimo` of type `Int!`
  """
  estoqueMinimo: OrderDirection
  """
  ✨ Generated from Field `Produto`.`fornecedor` of type `String`
  """
  fornecedor: OrderDirection
  """
  ✨ Generated from Field `Produto`.`nome` of type `String!`
  """
  nome: OrderDirection
  """
  ✨ Generated from Field `Produto`.`observacoes` of type `String`
  """
  observacoes: OrderDirection
  """
  ✨ Generated from Field `Produto`.`precoCusto` of type `Float!`
  """
  precoCusto: OrderDirection
  """
  ✨ Generated from Field `Produto`.`precoVenda` of type `Float!`
  """
  precoVenda: OrderDirection
  """
  ✨ Generated from Field `Produto`.`usuarioId` of type `String!`
  """
  usuarioId: OrderDirection
}
"""
✨ Generated data input type for table 'Usuario'. It includes all necessary fields for creating or upserting rows into table.
"""
input Usuario_Data {
  """
  ✨ Generated from Field `Usuario`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Usuario`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `Usuario`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `Usuario`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `Usuario`.`nome` of type `String!`
  """
  nome: String
  """
  ✨ `_expr` server value variant of `nome` (✨ Generated from Field `Usuario`.`nome` of type `String!`)
  """
  nome_expr: String_Expr
  """
  ✨ Generated from Field `Usuario`.`senha` of type `String!`
  """
  senha: String
  """
  ✨ `_expr` server value variant of `senha` (✨ Generated from Field `Usuario`.`senha` of type `String!`)
  """
  senha_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Usuario'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Usuario_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Usuario_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Usuario_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Usuario_Filter!]
  """
  ✨ Generated from Field `Usuario`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `Usuario`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `Usuario`.`nome` of type `String!`
  """
  nome: String_Filter
  """
  ✨ Generated from Field `Usuario`.`senha` of type `String!`
  """
  senha: String_Filter
}
"""
✨ Generated first-row input type for table 'Usuario'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Usuario_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Usuario_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Usuario_Filter
}
"""
✨ Generated having input type for table 'Usuario'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Usuario_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Usuario_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Usuario_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Usuario_Having!]
  """
  ✨ Generated from Field `Usuario`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Usuario`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `Usuario`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Usuario`.`nome_count` of type `Int!`
  """
  nome_count: Int_Filter
  """
  ✨ Generated from Field `Usuario`.`senha_count` of type `Int!`
  """
  senha_count: Int_Filter
}
"""
✨ Generated key input type for table 'Usuario'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Usuario_Key {
  """
  ✨ Generated from Field `Usuario`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Usuario`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'Usuario'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Usuario_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Usuario_Filter
}
"""
✨ Generated order input type for table 'Usuario'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Usuario_Order {
  """
  ✨ Generated from Field `Usuario`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Usuario`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `Usuario`.`nome` of type `String!`
  """
  nome: OrderDirection
  """
  ✨ Generated from Field `Usuario`.`senha` of type `String!`
  """
  senha: OrderDirection
}
"""
✨ Generated data input type for table 'Venda'. It includes all necessary fields for creating or upserting rows into table.
"""
input Venda_Data {
  """
  ✨ Generated from Field `Venda`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Venda`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`contatoCliente` of type `String`
  """
  contatoCliente: String
  """
  ✨ `_expr` server value variant of `contatoCliente` (✨ Generated from Field `Venda`.`contatoCliente` of type `String`)
  """
  contatoCliente_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`data` of type `Timestamp!`
  """
  data: Timestamp
  """
  ✨ `_expr` server value variant of `data` (✨ Generated from Field `Venda`.`data` of type `Timestamp!`)
  """
  data_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `data` (✨ Generated from Field `Venda`.`data` of type `Timestamp!`)
  """
  data_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `data` (✨ Generated from Field `Venda`.`data` of type `Timestamp!`)
  """
  data_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Venda`.`formaPagamento` of type `String!`
  """
  formaPagamento: String
  """
  ✨ `_expr` server value variant of `formaPagamento` (✨ Generated from Field `Venda`.`formaPagamento` of type `String!`)
  """
  formaPagamento_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`nomeCliente` of type `String`
  """
  nomeCliente: String
  """
  ✨ `_expr` server value variant of `nomeCliente` (✨ Generated from Field `Venda`.`nomeCliente` of type `String`)
  """
  nomeCliente_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`observacoes` of type `String`
  """
  observacoes: String
  """
  ✨ `_expr` server value variant of `observacoes` (✨ Generated from Field `Venda`.`observacoes` of type `String`)
  """
  observacoes_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`plataforma` of type `String!`
  """
  plataforma: String
  """
  ✨ `_expr` server value variant of `plataforma` (✨ Generated from Field `Venda`.`plataforma` of type `String!`)
  """
  plataforma_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Venda`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`usuarioId` of type `String!`
  """
  usuarioId: String
  """
  ✨ `_expr` server value variant of `usuarioId` (✨ Generated from Field `Venda`.`usuarioId` of type `String!`)
  """
  usuarioId_expr: String_Expr
  """
  ✨ Generated from Field `Venda`.`valorTotal` of type `Float!`
  """
  valorTotal: Float
  """
  ✨ `_expr` server value variant of `valorTotal` (✨ Generated from Field `Venda`.`valorTotal` of type `Float!`)
  """
  valorTotal_expr: Float_Expr
  """
  ✨ `_update` server value variant of `valorTotal` (✨ Generated from Field `Venda`.`valorTotal` of type `Float!`)
  """
  valorTotal_update: [Float_Update!]
}
"""
✨ Generated filter input type for table 'Venda'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Venda_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Venda_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Venda_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Venda_Filter!]
  """
  ✨ Generated from Field `Venda`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `Venda`.`contatoCliente` of type `String`
  """
  contatoCliente: String_Filter
  """
  ✨ Generated from Field `Venda`.`data` of type `Timestamp!`
  """
  data: Timestamp_Filter
  """
  ✨ Generated from Field `Venda`.`formaPagamento` of type `String!`
  """
  formaPagamento: String_Filter
  """
  ✨ Generated from Field `Venda`.`nomeCliente` of type `String`
  """
  nomeCliente: String_Filter
  """
  ✨ Generated from Field `Venda`.`observacoes` of type `String`
  """
  observacoes: String_Filter
  """
  ✨ Generated from Field `Venda`.`plataforma` of type `String!`
  """
  plataforma: String_Filter
  """
  ✨ Generated from Field `Venda`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Venda`.`usuarioId` of type `String!`
  """
  usuarioId: String_Filter
  """
  ✨ Generated from Field `Venda`.`valorTotal` of type `Float!`
  """
  valorTotal: Float_Filter
}
"""
✨ Generated first-row input type for table 'Venda'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Venda_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Venda_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Venda_Filter
}
"""
✨ Generated having input type for table 'Venda'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Venda_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Venda_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Venda_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Venda_Having!]
  """
  ✨ Generated from Field `Venda`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`contatoCliente_count` of type `Int!`
  """
  contatoCliente_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`data_count` of type `Int!`
  """
  data_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`formaPagamento_count` of type `Int!`
  """
  formaPagamento_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`nomeCliente_count` of type `Int!`
  """
  nomeCliente_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`observacoes_count` of type `Int!`
  """
  observacoes_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`plataforma_count` of type `Int!`
  """
  plataforma_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`usuarioId_count` of type `Int!`
  """
  usuarioId_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`valorTotal_count` of type `Int!`
  """
  valorTotal_count: Int_Filter
  """
  ✨ Generated from Field `Venda`.`valorTotal_sum` of type `Float`
  """
  valorTotal_sum: Float_Filter
  """
  ✨ Generated from Field `Venda`.`valorTotal_avg` of type `Float`
  """
  valorTotal_avg: Float_Filter
  """
  ✨ Generated from Field `Venda`.`data_min` of type `Timestamp`
  """
  data_min: Timestamp_Filter
  """
  ✨ Generated from Field `Venda`.`valorTotal_min` of type `Float`
  """
  valorTotal_min: Float_Filter
  """
  ✨ Generated from Field `Venda`.`data_max` of type `Timestamp`
  """
  data_max: Timestamp_Filter
  """
  ✨ Generated from Field `Venda`.`valorTotal_max` of type `Float`
  """
  valorTotal_max: Float_Filter
}
"""
✨ Generated key input type for table 'Venda'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Venda_Key {
  """
  ✨ Generated from Field `Venda`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Venda`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'Venda'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Venda_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Venda_Filter
}
"""
✨ Generated order input type for table 'Venda'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Venda_Order {
  """
  ✨ Generated from Field `Venda`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Venda`.`contatoCliente` of type `String`
  """
  contatoCliente: OrderDirection
  """
  ✨ Generated from Field `Venda`.`data` of type `Timestamp!`
  """
  data: OrderDirection
  """
  ✨ Generated from Field `Venda`.`formaPagamento` of type `String!`
  """
  formaPagamento: OrderDirection
  """
  ✨ Generated from Field `Venda`.`nomeCliente` of type `String`
  """
  nomeCliente: OrderDirection
  """
  ✨ Generated from Field `Venda`.`observacoes` of type `String`
  """
  observacoes: OrderDirection
  """
  ✨ Generated from Field `Venda`.`plataforma` of type `String!`
  """
  plataforma: OrderDirection
  """
  ✨ Generated from Field `Venda`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Venda`.`usuarioId` of type `String!`
  """
  usuarioId: OrderDirection
  """
  ✨ Generated from Field `Venda`.`valorTotal` of type `Float!`
  """
  valorTotal: OrderDirection
}
